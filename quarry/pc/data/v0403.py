# !!! auto-generated - do not edit !!!
from quarry.native import *
edition = 'pc'
release = '1.13.2-pre2'
version = 403
packet_init_down = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={})}, {'name': 'params', 'type': Switch(fields={}, compareTo='name', default=None)}])
packet_init_up = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'set_protocol', '0xfe': 'legacy_server_list_ping'})}, {'name': 'params', 'type': Switch(fields={'set_protocol': Container(fields=[{'name': 'protocolVersion', 'type': VarInt(bits=32)}, {'name': 'serverHost', 'type': String(countType=VarInt(bits=32))}, {'name': 'serverPort', 'type': Struct(fmt='>H')}, {'name': 'nextState', 'type': VarInt(bits=32)}]), 'legacy_server_list_ping': Container(fields=[{'name': 'payload', 'type': Struct(fmt='B')}])}, compareTo='name', default=None)}])
packet_status_down = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'server_info', '0x01': 'ping'})}, {'name': 'params', 'type': Switch(fields={'server_info': Container(fields=[{'name': 'response', 'type': String(countType=VarInt(bits=32))}]), 'ping': Container(fields=[{'name': 'time', 'type': Struct(fmt='>q')}])}, compareTo='name', default=None)}])
packet_status_up = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'ping_start', '0x01': 'ping'})}, {'name': 'params', 'type': Switch(fields={'ping_start': Container(fields=[]), 'ping': Container(fields=[{'name': 'time', 'type': Struct(fmt='>q')}])}, compareTo='name', default=None)}])
packet_login_down = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'disconnect', '0x01': 'encryption_begin', '0x02': 'success', '0x03': 'compress', '0x04': 'login_plugin_request'})}, {'name': 'params', 'type': Switch(fields={'disconnect': Container(fields=[{'name': 'reason', 'type': String(countType=VarInt(bits=32))}]), 'encryption_begin': Container(fields=[{'name': 'serverId', 'type': String(countType=VarInt(bits=32))}, {'name': 'publicKey', 'type': ByteArray(count=None, countType=VarInt(bits=32))}, {'name': 'verifyToken', 'type': ByteArray(count=None, countType=VarInt(bits=32))}]), 'success': Container(fields=[{'name': 'uuid', 'type': String(countType=VarInt(bits=32))}, {'name': 'username', 'type': String(countType=VarInt(bits=32))}]), 'compress': Container(fields=[{'name': 'threshold', 'type': VarInt(bits=32)}]), 'login_plugin_request': Container(fields=[{'name': 'messageId', 'type': VarInt(bits=32)}, {'name': 'channel', 'type': String(countType=VarInt(bits=32))}, {'name': 'data', 'type': ByteArray(count=None, countType=None)}])}, compareTo='name', default=None)}])
packet_login_up = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'login_start', '0x01': 'encryption_begin', '0x02': 'login_plugin_response'})}, {'name': 'params', 'type': Switch(fields={'login_start': Container(fields=[{'name': 'username', 'type': String(countType=VarInt(bits=32))}]), 'encryption_begin': Container(fields=[{'name': 'sharedSecret', 'type': ByteArray(count=None, countType=VarInt(bits=32))}, {'name': 'verifyToken', 'type': ByteArray(count=None, countType=VarInt(bits=32))}]), 'login_plugin_response': Container(fields=[{'name': 'messageId', 'type': VarInt(bits=32)}, {'name': 'data', 'type': Option(type=ByteArray(count=None, countType=None))}])}, compareTo='name', default=None)}])
packet_play_down = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'spawn_entity', '0x01': 'spawn_entity_experience_orb', '0x02': 'spawn_entity_weather', '0x03': 'spawn_entity_living', '0x04': 'spawn_entity_painting', '0x05': 'named_entity_spawn', '0x06': 'animation', '0x07': 'statistics', '0x08': 'block_break_animation', '0x09': 'tile_entity_data', '0x0a': 'block_action', '0x0b': 'block_change', '0x0c': 'boss_bar', '0x0d': 'difficulty', '0x0e': 'chat', '0x0f': 'multi_block_change', '0x10': 'tab_complete', '0x11': 'declare_commands', '0x12': 'transaction', '0x13': 'close_window', '0x14': 'open_window', '0x15': 'window_items', '0x16': 'craft_progress_bar', '0x17': 'set_slot', '0x18': 'set_cooldown', '0x19': 'custom_payload', '0x1a': 'named_sound_effect', '0x1b': 'kick_disconnect', '0x1c': 'entity_status', '0x1d': 'nbt_query_response', '0x1e': 'explosion', '0x1f': 'unload_chunk', '0x20': 'game_state_change', '0x21': 'keep_alive', '0x22': 'map_chunk', '0x23': 'world_event', '0x24': 'world_particles', '0x25': 'login', '0x26': 'map', '0x27': 'entity', '0x28': 'rel_entity_move', '0x29': 'entity_move_look', '0x2a': 'entity_look', '0x2b': 'vehicle_move', '0x2c': 'open_sign_entity', '0x2d': 'craft_recipe_response', '0x2e': 'abilities', '0x2f': 'combat_event', '0x30': 'player_info', '0x31': 'face_player', '0x32': 'position', '0x33': 'bed', '0x34': 'unlock_recipes', '0x35': 'entity_destroy', '0x36': 'remove_entity_effect', '0x37': 'resource_pack_send', '0x38': 'respawn', '0x39': 'entity_head_rotation', '0x3a': 'select_advancement_tab', '0x3b': 'world_border', '0x3c': 'camera', '0x3d': 'held_item_slot', '0x3e': 'scoreboard_display_objective', '0x3f': 'entity_metadata', '0x40': 'attach_entity', '0x41': 'entity_velocity', '0x42': 'entity_equipment', '0x43': 'experience', '0x44': 'update_health', '0x45': 'scoreboard_objective', '0x46': 'set_passengers', '0x47': 'teams', '0x48': 'scoreboard_score', '0x49': 'spawn_position', '0x4a': 'update_time', '0x4b': 'title', '0x4c': 'stop_sound', '0x4d': 'sound_effect', '0x4e': 'playerlist_header', '0x4f': 'collect', '0x50': 'entity_teleport', '0x51': 'advancements', '0x52': 'entity_update_attributes', '0x53': 'entity_effect', '0x54': 'declare_recipes', '0x55': 'tags'})}, {'name': 'params', 'type': Switch(fields={'spawn_entity': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'objectUUID', 'type': UUID()}, {'name': 'type', 'type': Struct(fmt='b')}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'objectData', 'type': Struct(fmt='>i')}, {'name': 'velocityX', 'type': Struct(fmt='>h')}, {'name': 'velocityY', 'type': Struct(fmt='>h')}, {'name': 'velocityZ', 'type': Struct(fmt='>h')}]), 'spawn_entity_experience_orb': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'count', 'type': Struct(fmt='>h')}]), 'spawn_entity_weather': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'type', 'type': Struct(fmt='b')}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}]), 'spawn_entity_living': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'entityUUID', 'type': UUID()}, {'name': 'type', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'headPitch', 'type': Struct(fmt='b')}, {'name': 'velocityX', 'type': Struct(fmt='>h')}, {'name': 'velocityY', 'type': Struct(fmt='>h')}, {'name': 'velocityZ', 'type': Struct(fmt='>h')}, {'name': 'metadata', 'type': EntityMetadataArray(type=Switch(fields={'0': Struct(fmt='b'), '1': VarInt(bits=32), '2': Struct(fmt='>f'), '3': String(countType=VarInt(bits=32)), '4': String(countType=VarInt(bits=32)), '5': Option(type=String(countType=VarInt(bits=32))), '6': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), '7': Struct(fmt='?'), '8': Container(fields=[{'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'roll', 'type': Struct(fmt='>f')}]), '9': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}]), '10': Option(type=BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])), '11': VarInt(bits=32), '12': Option(type=UUID()), '13': VarInt(bits=32), '14': NBT(), '15': Container(fields=[{'name': 'particleId', 'type': VarInt(bits=32)}, {'name': 'data', 'type': Switch(fields={'3': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '11': Container(fields=[{'name': 'red', 'type': Struct(fmt='>f')}, {'name': 'green', 'type': Struct(fmt='>f')}, {'name': 'blue', 'type': Struct(fmt='>f')}, {'name': 'scale', 'type': Struct(fmt='>f')}]), '20': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '27': Container(fields=[{'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}])}, compareTo='particleId', default=Void())}])}, compareTo='type', default=None), endVal=255)}]), 'spawn_entity_painting': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'entityUUID', 'type': UUID()}, {'name': 'title', 'type': VarInt(bits=32)}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'direction', 'type': Struct(fmt='B')}]), 'named_entity_spawn': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'playerUUID', 'type': UUID()}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'metadata', 'type': EntityMetadataArray(type=Switch(fields={'0': Struct(fmt='b'), '1': VarInt(bits=32), '2': Struct(fmt='>f'), '3': String(countType=VarInt(bits=32)), '4': String(countType=VarInt(bits=32)), '5': Option(type=String(countType=VarInt(bits=32))), '6': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), '7': Struct(fmt='?'), '8': Container(fields=[{'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'roll', 'type': Struct(fmt='>f')}]), '9': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}]), '10': Option(type=BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])), '11': VarInt(bits=32), '12': Option(type=UUID()), '13': VarInt(bits=32), '14': NBT(), '15': Container(fields=[{'name': 'particleId', 'type': VarInt(bits=32)}, {'name': 'data', 'type': Switch(fields={'3': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '11': Container(fields=[{'name': 'red', 'type': Struct(fmt='>f')}, {'name': 'green', 'type': Struct(fmt='>f')}, {'name': 'blue', 'type': Struct(fmt='>f')}, {'name': 'scale', 'type': Struct(fmt='>f')}]), '20': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '27': Container(fields=[{'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}])}, compareTo='particleId', default=Void())}])}, compareTo='type', default=None), endVal=255)}]), 'animation': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'animation', 'type': Struct(fmt='B')}]), 'statistics': Container(fields=[{'name': 'entries', 'type': Array(type=Container(fields=[{'name': 'categoryId', 'type': VarInt(bits=32)}, {'name': 'statisticId', 'type': VarInt(bits=32)}, {'name': 'value', 'type': VarInt(bits=32)}]), count=None, countType=VarInt(bits=32))}]), 'advancements': Container(fields=[{'name': 'reset', 'type': Struct(fmt='?')}, {'name': 'advancementMapping', 'type': Array(type=Container(fields=[{'name': 'key', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': Container(fields=[{'name': 'parentId', 'type': Option(type=String(countType=VarInt(bits=32)))}, {'name': 'displayData', 'type': Option(type=Container(fields=[{'name': 'title', 'type': String(countType=VarInt(bits=32))}, {'name': 'description', 'type': String(countType=VarInt(bits=32))}, {'name': 'icon', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}, {'name': 'frameType', 'type': VarInt(bits=32)}, {'name': 'flags', 'type': BitField(fields=[{'name': '_unused', 'size': 29, 'signed': False}, {'name': 'hidden', 'size': 1, 'signed': False}, {'name': 'show_toast', 'size': 1, 'signed': False}, {'name': 'has_background_texture', 'size': 1, 'signed': False}])}, {'name': 'backgroundTexture', 'type': Switch(fields={'1': String(countType=VarInt(bits=32))}, compareTo='flags/has_background_texture', default=Void())}, {'name': 'xCord', 'type': Struct(fmt='>f')}, {'name': 'yCord', 'type': Struct(fmt='>f')}]))}, {'name': 'criteria', 'type': Array(type=Container(fields=[{'name': 'key', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': Void()}]), count=None, countType=VarInt(bits=32))}, {'name': 'requirements', 'type': Array(type=Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}])}]), count=None, countType=VarInt(bits=32))}, {'name': 'identifiers', 'type': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}, {'name': 'progressMapping', 'type': Array(type=Container(fields=[{'name': 'key', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': Array(type=Container(fields=[{'name': 'criterionIdentifier', 'type': String(countType=VarInt(bits=32))}, {'name': 'criterionProgress', 'type': Option(type=Struct(fmt='>q'))}]), count=None, countType=VarInt(bits=32))}]), count=None, countType=VarInt(bits=32))}]), 'block_break_animation': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'destroyStage', 'type': Struct(fmt='b')}]), 'tile_entity_data': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'action', 'type': Struct(fmt='B')}, {'name': 'nbtData', 'type': NBT()}]), 'block_action': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'byte1', 'type': Struct(fmt='B')}, {'name': 'byte2', 'type': Struct(fmt='B')}, {'name': 'blockId', 'type': VarInt(bits=32)}]), 'block_change': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'type', 'type': VarInt(bits=32)}]), 'boss_bar': Container(fields=[{'name': 'entityUUID', 'type': UUID()}, {'name': 'action', 'type': VarInt(bits=32)}, {'name': 'title', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '3': String(countType=VarInt(bits=32))}, compareTo='action', default=Void())}, {'name': 'health', 'type': Switch(fields={'0': Struct(fmt='>f'), '2': Struct(fmt='>f')}, compareTo='action', default=Void())}, {'name': 'color', 'type': Switch(fields={'0': VarInt(bits=32), '4': VarInt(bits=32)}, compareTo='action', default=Void())}, {'name': 'dividers', 'type': Switch(fields={'0': VarInt(bits=32), '4': VarInt(bits=32)}, compareTo='action', default=Void())}, {'name': 'flags', 'type': Switch(fields={'0': Struct(fmt='B'), '5': Struct(fmt='B')}, compareTo='action', default=Void())}]), 'difficulty': Container(fields=[{'name': 'difficulty', 'type': Struct(fmt='B')}]), 'tab_complete': Container(fields=[{'name': 'transactionId', 'type': VarInt(bits=32)}, {'name': 'start', 'type': VarInt(bits=32)}, {'name': 'length', 'type': VarInt(bits=32)}, {'name': 'matches', 'type': Array(type=Container(fields=[{'name': 'match', 'type': String(countType=VarInt(bits=32))}, {'name': 'tooltip', 'type': Option(type=String(countType=VarInt(bits=32)))}]), count=None, countType=VarInt(bits=32))}]), 'declare_commands': Container(fields=[{'name': 'nodes', 'type': Array(type=Container(fields=[{'name': 'flags', 'type': BitField(fields=[{'name': 'unused', 'size': 3, 'signed': False}, {'name': 'has_custom_suggestions', 'size': 1, 'signed': False}, {'name': 'has_redirect_node', 'size': 1, 'signed': False}, {'name': 'has_command', 'size': 1, 'signed': False}, {'name': 'command_node_type', 'size': 2, 'signed': False}])}, {'name': 'children', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}, {'name': 'redirectNode', 'type': Switch(fields={'1': VarInt(bits=32)}, compareTo='flags/has_redirect_node', default=Void())}, {'name': 'extraNodeData', 'type': Switch(fields={'0': Void(), '1': String(countType=VarInt(bits=32)), '2': Container(fields=[{'name': 'name', 'type': String(countType=VarInt(bits=32))}, {'name': 'parser', 'type': String(countType=VarInt(bits=32))}, {'name': 'properties', 'type': Switch(fields={'brigadier:bool': Void(), 'brigadier:double': Container(fields=[{'name': 'flags', 'type': BitField(fields=[{'name': 'unused', 'size': 6, 'signed': False}, {'name': 'max_present', 'size': 1, 'signed': False}, {'name': 'min_present', 'size': 1, 'signed': False}])}, {'name': 'min', 'type': Switch(fields={'1': Struct(fmt='>d')}, compareTo='flags/min_present', default=Void())}, {'name': 'max', 'type': Switch(fields={'1': Struct(fmt='>d')}, compareTo='flags/max_present', default=Void())}]), 'brigadier:float': Container(fields=[{'name': 'flags', 'type': BitField(fields=[{'name': 'unused', 'size': 6, 'signed': False}, {'name': 'max_present', 'size': 1, 'signed': False}, {'name': 'min_present', 'size': 1, 'signed': False}])}, {'name': 'min', 'type': Switch(fields={'1': Struct(fmt='>f')}, compareTo='flags/min_present', default=Void())}, {'name': 'max', 'type': Switch(fields={'1': Struct(fmt='>f')}, compareTo='flags/max_present', default=Void())}]), 'brigadier:integer': Container(fields=[{'name': 'flags', 'type': BitField(fields=[{'name': 'unused', 'size': 6, 'signed': False}, {'name': 'max_present', 'size': 1, 'signed': False}, {'name': 'min_present', 'size': 1, 'signed': False}])}, {'name': 'min', 'type': Switch(fields={'1': Struct(fmt='>i')}, compareTo='flags/min_present', default=Void())}, {'name': 'max', 'type': Switch(fields={'1': Struct(fmt='>i')}, compareTo='flags/max_present', default=Void())}]), 'brigadier:string': VarInt(bits=32), 'minecraft:entity': Struct(fmt='b'), 'minecraft:score_holder': Struct(fmt='b')}, compareTo='parser', default=Void())}, {'name': 'suggests', 'type': Switch(fields={'1': String(countType=VarInt(bits=32))}, compareTo='../flags/has_custom_suggestions', default=Void())}])}, compareTo='flags/command_node_type', default=None)}]), count=None, countType=VarInt(bits=32))}, {'name': 'rootIndex', 'type': VarInt(bits=32)}]), 'face_player': Container(fields=[{'name': 'feet_eyes', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'isEntity', 'type': Struct(fmt='?')}, {'name': 'entityId', 'type': Switch(fields={'true': VarInt(bits=32)}, compareTo='isEntity', default=Void())}, {'name': 'entity_feet_eyes', 'type': Switch(fields={'true': String(countType=VarInt(bits=32))}, compareTo='isEntity', default=Void())}]), 'nbt_query_response': Container(fields=[{'name': 'transactionId', 'type': VarInt(bits=32)}, {'name': 'nbt', 'type': NBT()}]), 'chat': Container(fields=[{'name': 'message', 'type': String(countType=VarInt(bits=32))}, {'name': 'position', 'type': Struct(fmt='b')}]), 'multi_block_change': Container(fields=[{'name': 'chunkX', 'type': Struct(fmt='>i')}, {'name': 'chunkZ', 'type': Struct(fmt='>i')}, {'name': 'records', 'type': Array(type=Container(fields=[{'name': 'horizontalPos', 'type': Struct(fmt='B')}, {'name': 'y', 'type': Struct(fmt='B')}, {'name': 'blockId', 'type': VarInt(bits=32)}]), count=None, countType=VarInt(bits=32))}]), 'transaction': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'action', 'type': Struct(fmt='>h')}, {'name': 'accepted', 'type': Struct(fmt='?')}]), 'close_window': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}]), 'open_window': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}, {'name': 'inventoryType', 'type': String(countType=VarInt(bits=32))}, {'name': 'windowTitle', 'type': String(countType=VarInt(bits=32))}, {'name': 'slotCount', 'type': Struct(fmt='B')}, {'name': 'entityId', 'type': Switch(fields={'EntityHorse': Struct(fmt='>i')}, compareTo='inventoryType', default=Void())}]), 'window_items': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}, {'name': 'items', 'type': Array(type=Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), count=None, countType=Struct(fmt='>h'))}]), 'craft_progress_bar': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}, {'name': 'property', 'type': Struct(fmt='>h')}, {'name': 'value', 'type': Struct(fmt='>h')}]), 'set_slot': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'slot', 'type': Struct(fmt='>h')}, {'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'set_cooldown': Container(fields=[{'name': 'itemID', 'type': VarInt(bits=32)}, {'name': 'cooldownTicks', 'type': VarInt(bits=32)}]), 'custom_payload': Container(fields=[{'name': 'channel', 'type': String(countType=VarInt(bits=32))}, {'name': 'data', 'type': ByteArray(count=None, countType=None)}]), 'named_sound_effect': Container(fields=[{'name': 'soundName', 'type': String(countType=VarInt(bits=32))}, {'name': 'soundCategory', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>i')}, {'name': 'y', 'type': Struct(fmt='>i')}, {'name': 'z', 'type': Struct(fmt='>i')}, {'name': 'volume', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}]), 'kick_disconnect': Container(fields=[{'name': 'reason', 'type': String(countType=VarInt(bits=32))}]), 'entity_status': Container(fields=[{'name': 'entityId', 'type': Struct(fmt='>i')}, {'name': 'entityStatus', 'type': Struct(fmt='b')}]), 'explosion': Container(fields=[{'name': 'x', 'type': Struct(fmt='>f')}, {'name': 'y', 'type': Struct(fmt='>f')}, {'name': 'z', 'type': Struct(fmt='>f')}, {'name': 'radius', 'type': Struct(fmt='>f')}, {'name': 'affectedBlockOffsets', 'type': Array(type=Container(fields=[{'name': 'x', 'type': Struct(fmt='b')}, {'name': 'y', 'type': Struct(fmt='b')}, {'name': 'z', 'type': Struct(fmt='b')}]), count=None, countType=Struct(fmt='>i'))}, {'name': 'playerMotionX', 'type': Struct(fmt='>f')}, {'name': 'playerMotionY', 'type': Struct(fmt='>f')}, {'name': 'playerMotionZ', 'type': Struct(fmt='>f')}]), 'unload_chunk': Container(fields=[{'name': 'chunkX', 'type': Struct(fmt='>i')}, {'name': 'chunkZ', 'type': Struct(fmt='>i')}]), 'game_state_change': Container(fields=[{'name': 'reason', 'type': Struct(fmt='B')}, {'name': 'gameMode', 'type': Struct(fmt='>f')}]), 'keep_alive': Container(fields=[{'name': 'keepAliveId', 'type': Struct(fmt='>q')}]), 'map_chunk': Container(fields=[{'name': 'x', 'type': Struct(fmt='>i')}, {'name': 'z', 'type': Struct(fmt='>i')}, {'name': 'groundUp', 'type': Struct(fmt='?')}, {'name': 'bitMap', 'type': VarInt(bits=32)}, {'name': 'chunkData', 'type': ByteArray(count=None, countType=VarInt(bits=32))}, {'name': 'blockEntities', 'type': Array(type=NBT(), count=None, countType=VarInt(bits=32))}]), 'world_event': Container(fields=[{'name': 'effectId', 'type': Struct(fmt='>i')}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'data', 'type': Struct(fmt='>i')}, {'name': 'global', 'type': Struct(fmt='?')}]), 'world_particles': Container(fields=[{'name': 'particleId', 'type': Struct(fmt='>i')}, {'name': 'longDistance', 'type': Struct(fmt='?')}, {'name': 'x', 'type': Struct(fmt='>f')}, {'name': 'y', 'type': Struct(fmt='>f')}, {'name': 'z', 'type': Struct(fmt='>f')}, {'name': 'offsetX', 'type': Struct(fmt='>f')}, {'name': 'offsetY', 'type': Struct(fmt='>f')}, {'name': 'offsetZ', 'type': Struct(fmt='>f')}, {'name': 'particleData', 'type': Struct(fmt='>f')}, {'name': 'particles', 'type': Struct(fmt='>i')}, {'name': 'data', 'type': Switch(fields={'3': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '11': Container(fields=[{'name': 'red', 'type': Struct(fmt='>f')}, {'name': 'green', 'type': Struct(fmt='>f')}, {'name': 'blue', 'type': Struct(fmt='>f')}, {'name': 'scale', 'type': Struct(fmt='>f')}]), '20': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '27': Container(fields=[{'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}])}, compareTo='particleId', default=Void())}]), 'login': Container(fields=[{'name': 'entityId', 'type': Struct(fmt='>i')}, {'name': 'gameMode', 'type': Struct(fmt='B')}, {'name': 'dimension', 'type': Struct(fmt='>i')}, {'name': 'difficulty', 'type': Struct(fmt='B')}, {'name': 'maxPlayers', 'type': Struct(fmt='B')}, {'name': 'levelType', 'type': String(countType=VarInt(bits=32))}, {'name': 'reducedDebugInfo', 'type': Struct(fmt='?')}]), 'map': Container(fields=[{'name': 'itemDamage', 'type': VarInt(bits=32)}, {'name': 'scale', 'type': Struct(fmt='b')}, {'name': 'trackingPosition', 'type': Struct(fmt='?')}, {'name': 'icons', 'type': Array(type=Container(fields=[{'name': 'type', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='b')}, {'name': 'y', 'type': Struct(fmt='b')}, {'name': 'direction', 'type': Struct(fmt='B')}, {'name': 'displayName', 'type': Option(type=String(countType=VarInt(bits=32)))}]), count=None, countType=VarInt(bits=32))}, {'name': 'columns', 'type': Struct(fmt='b')}, {'name': 'rows', 'type': Switch(fields={'0': Void()}, compareTo='columns', default=Struct(fmt='b'))}, {'name': 'x', 'type': Switch(fields={'0': Void()}, compareTo='columns', default=Struct(fmt='b'))}, {'name': 'y', 'type': Switch(fields={'0': Void()}, compareTo='columns', default=Struct(fmt='b'))}, {'name': 'data', 'type': Switch(fields={'0': Void()}, compareTo='columns', default=ByteArray(count=None, countType=VarInt(bits=32)))}]), 'rel_entity_move': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'dX', 'type': Struct(fmt='>h')}, {'name': 'dY', 'type': Struct(fmt='>h')}, {'name': 'dZ', 'type': Struct(fmt='>h')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'entity_move_look': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'dX', 'type': Struct(fmt='>h')}, {'name': 'dY', 'type': Struct(fmt='>h')}, {'name': 'dZ', 'type': Struct(fmt='>h')}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'entity_look': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'entity': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}]), 'vehicle_move': Container(fields=[{'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}]), 'open_sign_entity': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}]), 'craft_recipe_response': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'recipe', 'type': String(countType=VarInt(bits=32))}]), 'abilities': Container(fields=[{'name': 'flags', 'type': Struct(fmt='b')}, {'name': 'flyingSpeed', 'type': Struct(fmt='>f')}, {'name': 'walkingSpeed', 'type': Struct(fmt='>f')}]), 'combat_event': Container(fields=[{'name': 'event', 'type': VarInt(bits=32)}, {'name': 'duration', 'type': Switch(fields={'1': VarInt(bits=32)}, compareTo='event', default=Void())}, {'name': 'playerId', 'type': Switch(fields={'2': VarInt(bits=32)}, compareTo='event', default=Void())}, {'name': 'entityId', 'type': Switch(fields={'1': Struct(fmt='>i'), '2': Struct(fmt='>i')}, compareTo='event', default=Void())}, {'name': 'message', 'type': Switch(fields={'2': String(countType=VarInt(bits=32))}, compareTo='event', default=Void())}]), 'player_info': Container(fields=[{'name': 'action', 'type': VarInt(bits=32)}, {'name': 'data', 'type': Array(type=Container(fields=[{'name': 'UUID', 'type': UUID()}, {'name': 'name', 'type': Switch(fields={'0': String(countType=VarInt(bits=32))}, compareTo='../action', default=Void())}, {'name': 'properties', 'type': Switch(fields={'0': Array(type=Container(fields=[{'name': 'name', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': String(countType=VarInt(bits=32))}, {'name': 'signature', 'type': Option(type=String(countType=VarInt(bits=32)))}]), count=None, countType=VarInt(bits=32))}, compareTo='../action', default=Void())}, {'name': 'gamemode', 'type': Switch(fields={'0': VarInt(bits=32), '1': VarInt(bits=32)}, compareTo='../action', default=Void())}, {'name': 'ping', 'type': Switch(fields={'0': VarInt(bits=32), '2': VarInt(bits=32)}, compareTo='../action', default=Void())}, {'name': 'displayName', 'type': Switch(fields={'0': Option(type=String(countType=VarInt(bits=32))), '3': Option(type=String(countType=VarInt(bits=32)))}, compareTo='../action', default=Void())}]), count=None, countType=VarInt(bits=32))}]), 'position': Container(fields=[{'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'flags', 'type': Struct(fmt='b')}, {'name': 'teleportId', 'type': VarInt(bits=32)}]), 'bed': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}]), 'unlock_recipes': Container(fields=[{'name': 'action', 'type': VarInt(bits=32)}, {'name': 'craftingBookOpen', 'type': Struct(fmt='?')}, {'name': 'filteringCraftable', 'type': Struct(fmt='?')}, {'name': 'smeltingBookOpen', 'type': Struct(fmt='?')}, {'name': 'filteringSmeltable', 'type': Struct(fmt='?')}, {'name': 'recipes1', 'type': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}, {'name': 'recipes2', 'type': Switch(fields={'0': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}, compareTo='action', default=Void())}]), 'entity_destroy': Container(fields=[{'name': 'entityIds', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}]), 'remove_entity_effect': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'effectId', 'type': Struct(fmt='b')}]), 'resource_pack_send': Container(fields=[{'name': 'url', 'type': String(countType=VarInt(bits=32))}, {'name': 'hash', 'type': String(countType=VarInt(bits=32))}]), 'respawn': Container(fields=[{'name': 'dimension', 'type': Struct(fmt='>i')}, {'name': 'difficulty', 'type': Struct(fmt='B')}, {'name': 'gamemode', 'type': Struct(fmt='B')}, {'name': 'levelType', 'type': String(countType=VarInt(bits=32))}]), 'entity_update_attributes': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'properties', 'type': Array(type=Container(fields=[{'name': 'key', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': Struct(fmt='>d')}, {'name': 'modifiers', 'type': Array(type=Container(fields=[{'name': 'uuid', 'type': UUID()}, {'name': 'amount', 'type': Struct(fmt='>d')}, {'name': 'operation', 'type': Struct(fmt='b')}]), count=None, countType=VarInt(bits=32))}]), count=None, countType=Struct(fmt='>i'))}]), 'world_border': Container(fields=[{'name': 'action', 'type': VarInt(bits=32)}, {'name': 'radius', 'type': Switch(fields={'0': Struct(fmt='>d')}, compareTo='action', default=Void())}, {'name': 'x', 'type': Switch(fields={'2': Struct(fmt='>d'), '3': Struct(fmt='>d')}, compareTo='action', default=Void())}, {'name': 'z', 'type': Switch(fields={'2': Struct(fmt='>d'), '3': Struct(fmt='>d')}, compareTo='action', default=Void())}, {'name': 'old_radius', 'type': Switch(fields={'1': Struct(fmt='>d'), '3': Struct(fmt='>d')}, compareTo='action', default=Void())}, {'name': 'new_radius', 'type': Switch(fields={'1': Struct(fmt='>d'), '3': Struct(fmt='>d')}, compareTo='action', default=Void())}, {'name': 'speed', 'type': Switch(fields={'1': VarInt(bits=32), '3': VarInt(bits=32)}, compareTo='action', default=Void())}, {'name': 'portalBoundary', 'type': Switch(fields={'3': VarInt(bits=32)}, compareTo='action', default=Void())}, {'name': 'warning_time', 'type': Switch(fields={'3': VarInt(bits=32), '4': VarInt(bits=32)}, compareTo='action', default=Void())}, {'name': 'warning_blocks', 'type': Switch(fields={'3': VarInt(bits=32), '5': VarInt(bits=32)}, compareTo='action', default=Void())}]), 'camera': Container(fields=[{'name': 'cameraId', 'type': VarInt(bits=32)}]), 'held_item_slot': Container(fields=[{'name': 'slot', 'type': Struct(fmt='b')}]), 'scoreboard_display_objective': Container(fields=[{'name': 'position', 'type': Struct(fmt='b')}, {'name': 'name', 'type': String(countType=VarInt(bits=32))}]), 'entity_metadata': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'metadata', 'type': EntityMetadataArray(type=Switch(fields={'0': Struct(fmt='b'), '1': VarInt(bits=32), '2': Struct(fmt='>f'), '3': String(countType=VarInt(bits=32)), '4': String(countType=VarInt(bits=32)), '5': Option(type=String(countType=VarInt(bits=32))), '6': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), '7': Struct(fmt='?'), '8': Container(fields=[{'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'roll', 'type': Struct(fmt='>f')}]), '9': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}]), '10': Option(type=BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])), '11': VarInt(bits=32), '12': Option(type=UUID()), '13': VarInt(bits=32), '14': NBT(), '15': Container(fields=[{'name': 'particleId', 'type': VarInt(bits=32)}, {'name': 'data', 'type': Switch(fields={'3': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '11': Container(fields=[{'name': 'red', 'type': Struct(fmt='>f')}, {'name': 'green', 'type': Struct(fmt='>f')}, {'name': 'blue', 'type': Struct(fmt='>f')}, {'name': 'scale', 'type': Struct(fmt='>f')}]), '20': Container(fields=[{'name': 'blockState', 'type': VarInt(bits=32)}]), '27': Container(fields=[{'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}])}, compareTo='particleId', default=Void())}])}, compareTo='type', default=None), endVal=255)}]), 'attach_entity': Container(fields=[{'name': 'entityId', 'type': Struct(fmt='>i')}, {'name': 'vehicleId', 'type': Struct(fmt='>i')}]), 'entity_velocity': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'velocityX', 'type': Struct(fmt='>h')}, {'name': 'velocityY', 'type': Struct(fmt='>h')}, {'name': 'velocityZ', 'type': Struct(fmt='>h')}]), 'entity_equipment': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'slot', 'type': VarInt(bits=32)}, {'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'experience': Container(fields=[{'name': 'experienceBar', 'type': Struct(fmt='>f')}, {'name': 'level', 'type': VarInt(bits=32)}, {'name': 'totalExperience', 'type': VarInt(bits=32)}]), 'update_health': Container(fields=[{'name': 'health', 'type': Struct(fmt='>f')}, {'name': 'food', 'type': VarInt(bits=32)}, {'name': 'foodSaturation', 'type': Struct(fmt='>f')}]), 'scoreboard_objective': Container(fields=[{'name': 'name', 'type': String(countType=VarInt(bits=32))}, {'name': 'action', 'type': Struct(fmt='b')}, {'name': 'displayText', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='action', default=Void())}, {'name': 'type', 'type': Switch(fields={'0': VarInt(bits=32), '2': VarInt(bits=32)}, compareTo='action', default=Void())}]), 'set_passengers': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'passengers', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}]), 'teams': Container(fields=[{'name': 'team', 'type': String(countType=VarInt(bits=32))}, {'name': 'mode', 'type': Struct(fmt='b')}, {'name': 'name', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='mode', default=Void())}, {'name': 'friendlyFire', 'type': Switch(fields={'0': Struct(fmt='b'), '2': Struct(fmt='b')}, compareTo='mode', default=Void())}, {'name': 'nameTagVisibility', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='mode', default=Void())}, {'name': 'collisionRule', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='mode', default=Void())}, {'name': 'formatting', 'type': Switch(fields={'0': VarInt(bits=32), '2': VarInt(bits=32)}, compareTo='mode', default=Void())}, {'name': 'players', 'type': Switch(fields={'0': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32)), '3': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32)), '4': Array(type=String(countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}, compareTo='mode', default=Void())}, {'name': 'prefix', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='mode', default=Void())}, {'name': 'suffix', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='mode', default=Void())}]), 'scoreboard_score': Container(fields=[{'name': 'itemName', 'type': String(countType=VarInt(bits=32))}, {'name': 'action', 'type': Struct(fmt='b')}, {'name': 'scoreName', 'type': String(countType=VarInt(bits=32))}, {'name': 'value', 'type': Switch(fields={'1': Void()}, compareTo='action', default=VarInt(bits=32))}]), 'spawn_position': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}]), 'update_time': Container(fields=[{'name': 'age', 'type': Struct(fmt='>q')}, {'name': 'time', 'type': Struct(fmt='>q')}]), 'title': Container(fields=[{'name': 'action', 'type': VarInt(bits=32)}, {'name': 'text', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '1': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='action', default=Void())}, {'name': 'fadeIn', 'type': Switch(fields={'3': Struct(fmt='>i')}, compareTo='action', default=Void())}, {'name': 'stay', 'type': Switch(fields={'3': Struct(fmt='>i')}, compareTo='action', default=Void())}, {'name': 'fadeOut', 'type': Switch(fields={'3': Struct(fmt='>i')}, compareTo='action', default=Void())}]), 'stop_sound': Container(fields=[{'name': 'flags', 'type': Struct(fmt='b')}, {'name': 'source', 'type': Switch(fields={'3': VarInt(bits=32), '1': VarInt(bits=32)}, compareTo='flags', default=Void())}, {'name': 'sound', 'type': Switch(fields={'3': String(countType=VarInt(bits=32)), '2': String(countType=VarInt(bits=32))}, compareTo='flags', default=Void())}]), 'sound_effect': Container(fields=[{'name': 'soundId', 'type': VarInt(bits=32)}, {'name': 'soundCategory', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>i')}, {'name': 'y', 'type': Struct(fmt='>i')}, {'name': 'z', 'type': Struct(fmt='>i')}, {'name': 'volume', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}]), 'playerlist_header': Container(fields=[{'name': 'header', 'type': String(countType=VarInt(bits=32))}, {'name': 'footer', 'type': String(countType=VarInt(bits=32))}]), 'collect': Container(fields=[{'name': 'collectedEntityId', 'type': VarInt(bits=32)}, {'name': 'collectorEntityId', 'type': VarInt(bits=32)}, {'name': 'pickupItemCount', 'type': VarInt(bits=32)}]), 'entity_teleport': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='b')}, {'name': 'pitch', 'type': Struct(fmt='b')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'entity_head_rotation': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'headYaw', 'type': Struct(fmt='b')}]), 'entity_effect': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'effectId', 'type': Struct(fmt='b')}, {'name': 'amplifier', 'type': Struct(fmt='b')}, {'name': 'duration', 'type': VarInt(bits=32)}, {'name': 'hideParticles', 'type': Struct(fmt='b')}]), 'select_advancement_tab': Container(fields=[{'name': 'id', 'type': Option(type=String(countType=VarInt(bits=32)))}]), 'declare_recipes': Container(fields=[{'name': 'recipes', 'type': Array(type=Container(fields=[{'name': 'recipeId', 'type': String(countType=VarInt(bits=32))}, {'name': 'type', 'type': String(countType=VarInt(bits=32))}, {'name': 'data', 'type': Switch(fields={'crafting_shapeless': Container(fields=[{'name': 'group', 'type': String(countType=VarInt(bits=32))}, {'name': 'ingredients', 'type': Array(type=Array(type=Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), count=None, countType=VarInt(bits=32)), count=None, countType=VarInt(bits=32))}, {'name': 'result', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'crafting_shaped': Container(fields=[{'name': 'width', 'type': VarInt(bits=32)}, {'name': 'height', 'type': VarInt(bits=32)}, {'name': 'group', 'type': String(countType=VarInt(bits=32))}, {'name': 'ingredients', 'type': Array(type=Array(type=Array(type=Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), count=None, countType=VarInt(bits=32)), count='height', countType=None), count='width', countType=None)}, {'name': 'result', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'crafting_special_armordye': Void(), 'crafting_special_bookcloning': Void(), 'crafting_special_mapcloning': Void(), 'crafting_special_mapextending': Void(), 'crafting_special_firework_rocket': Void(), 'crafting_special_firework_star': Void(), 'crafting_special_firework_star_fade': Void(), 'crafting_special_repairitem': Void(), 'crafting_special_tippedarrow': Void(), 'crafting_special_bannerduplicate': Void(), 'crafting_special_banneraddpattern': Void(), 'crafting_special_shielddecoration': Void(), 'crafting_special_shulkerboxcoloring': Void(), 'smelting': Container(fields=[{'name': 'group', 'type': String(countType=VarInt(bits=32))}, {'name': 'ingredient', 'type': Array(type=Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}]), count=None, countType=VarInt(bits=32))}, {'name': 'result', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}, {'name': 'experience', 'type': Struct(fmt='>f')}, {'name': 'cookTime', 'type': VarInt(bits=32)}])}, compareTo='type', default=None)}]), count=None, countType=VarInt(bits=32))}]), 'tags': Container(fields=[{'name': 'blockTags', 'type': Array(type=Container(fields=[{'name': 'tagName', 'type': String(countType=VarInt(bits=32))}, {'name': 'entries', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}]), count=None, countType=VarInt(bits=32))}, {'name': 'itemTags', 'type': Array(type=Container(fields=[{'name': 'tagName', 'type': String(countType=VarInt(bits=32))}, {'name': 'entries', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}]), count=None, countType=VarInt(bits=32))}, {'name': 'fluidTags', 'type': Array(type=Container(fields=[{'name': 'tagName', 'type': String(countType=VarInt(bits=32))}, {'name': 'entries', 'type': Array(type=VarInt(bits=32), count=None, countType=VarInt(bits=32))}]), count=None, countType=VarInt(bits=32))}])}, compareTo='name', default=None)}])
packet_play_up = Container(fields=[{'name': 'name', 'type': Mapper(type=VarInt(bits=32), mappings={'0x00': 'teleport_confirm', '0x01': 'query_block_nbt', '0x02': 'chat', '0x03': 'client_command', '0x04': 'settings', '0x05': 'tab_complete', '0x06': 'transaction', '0x07': 'enchant_item', '0x08': 'window_click', '0x09': 'close_window', '0x0a': 'custom_payload', '0x0b': 'edit_book', '0x0c': 'query_entity_nbt', '0x0d': 'use_entity', '0x0e': 'keep_alive', '0x0f': 'flying', '0x10': 'position', '0x11': 'position_look', '0x12': 'look', '0x13': 'vehicle_move', '0x14': 'steer_boat', '0x15': 'pick_item', '0x16': 'craft_recipe_request', '0x17': 'abilities', '0x18': 'block_dig', '0x19': 'entity_action', '0x1a': 'steer_vehicle', '0x1b': 'crafting_book_data', '0x1c': 'name_item', '0x1d': 'resource_pack_receive', '0x1e': 'advancement_tab', '0x1f': 'select_trade', '0x20': 'set_beacon_effect', '0x21': 'held_item_slot', '0x22': 'update_command_block', '0x23': 'update_command_block_minecart', '0x24': 'set_creative_slot', '0x25': 'update_structure_block', '0x26': 'update_sign', '0x27': 'arm_animation', '0x28': 'spectate', '0x29': 'block_place', '0x2a': 'use_item'})}, {'name': 'params', 'type': Switch(fields={'teleport_confirm': Container(fields=[{'name': 'teleportId', 'type': VarInt(bits=32)}]), 'query_block_nbt': Container(fields=[{'name': 'transactionId', 'type': VarInt(bits=32)}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}]), 'edit_book': Container(fields=[{'name': 'new_book', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}, {'name': 'signing', 'type': Struct(fmt='?')}, {'name': 'hand', 'type': VarInt(bits=32)}]), 'query_entity_nbt': Container(fields=[{'name': 'transactionId', 'type': VarInt(bits=32)}, {'name': 'entityId', 'type': VarInt(bits=32)}]), 'pick_item': Container(fields=[{'name': 'slot', 'type': VarInt(bits=32)}]), 'name_item': Container(fields=[{'name': 'name', 'type': String(countType=VarInt(bits=32))}]), 'select_trade': Container(fields=[{'name': 'slot', 'type': VarInt(bits=32)}]), 'set_beacon_effect': Container(fields=[{'name': 'primary_effect', 'type': VarInt(bits=32)}, {'name': 'secondary_effect', 'type': VarInt(bits=32)}]), 'update_command_block': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'command', 'type': String(countType=VarInt(bits=32))}, {'name': 'mode', 'type': VarInt(bits=32)}, {'name': 'flags', 'type': Struct(fmt='B')}]), 'update_command_block_minecart': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'command', 'type': String(countType=VarInt(bits=32))}, {'name': 'track_output', 'type': Struct(fmt='?')}]), 'update_structure_block': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'action', 'type': VarInt(bits=32)}, {'name': 'mode', 'type': VarInt(bits=32)}, {'name': 'name', 'type': String(countType=VarInt(bits=32))}, {'name': 'offset_x', 'type': Struct(fmt='B')}, {'name': 'offset_y', 'type': Struct(fmt='B')}, {'name': 'offset_z', 'type': Struct(fmt='B')}, {'name': 'size_x', 'type': Struct(fmt='B')}, {'name': 'size_y', 'type': Struct(fmt='B')}, {'name': 'size_z', 'type': Struct(fmt='B')}, {'name': 'mirror', 'type': VarInt(bits=32)}, {'name': 'rotation', 'type': VarInt(bits=32)}, {'name': 'metadata', 'type': String(countType=VarInt(bits=32))}, {'name': 'integrity', 'type': Struct(fmt='>f')}, {'name': 'seed', 'type': VarInt(bits=32)}, {'name': 'flags', 'type': Struct(fmt='B')}]), 'tab_complete': Container(fields=[{'name': 'transactionId', 'type': VarInt(bits=32)}, {'name': 'text', 'type': String(countType=VarInt(bits=32))}]), 'chat': Container(fields=[{'name': 'message', 'type': String(countType=VarInt(bits=32))}]), 'client_command': Container(fields=[{'name': 'actionId', 'type': VarInt(bits=32)}]), 'settings': Container(fields=[{'name': 'locale', 'type': String(countType=VarInt(bits=32))}, {'name': 'viewDistance', 'type': Struct(fmt='b')}, {'name': 'chatFlags', 'type': VarInt(bits=32)}, {'name': 'chatColors', 'type': Struct(fmt='?')}, {'name': 'skinParts', 'type': Struct(fmt='B')}, {'name': 'mainHand', 'type': VarInt(bits=32)}]), 'transaction': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'action', 'type': Struct(fmt='>h')}, {'name': 'accepted', 'type': Struct(fmt='?')}]), 'enchant_item': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'enchantment', 'type': Struct(fmt='b')}]), 'window_click': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}, {'name': 'slot', 'type': Struct(fmt='>h')}, {'name': 'mouseButton', 'type': Struct(fmt='b')}, {'name': 'action', 'type': Struct(fmt='>h')}, {'name': 'mode', 'type': Struct(fmt='b')}, {'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'close_window': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='B')}]), 'custom_payload': Container(fields=[{'name': 'channel', 'type': String(countType=VarInt(bits=32))}, {'name': 'data', 'type': ByteArray(count=None, countType=None)}]), 'use_entity': Container(fields=[{'name': 'target', 'type': VarInt(bits=32)}, {'name': 'mouse', 'type': VarInt(bits=32)}, {'name': 'x', 'type': Switch(fields={'2': Struct(fmt='>f')}, compareTo='mouse', default=Void())}, {'name': 'y', 'type': Switch(fields={'2': Struct(fmt='>f')}, compareTo='mouse', default=Void())}, {'name': 'z', 'type': Switch(fields={'2': Struct(fmt='>f')}, compareTo='mouse', default=Void())}, {'name': 'hand', 'type': Switch(fields={'0': VarInt(bits=32), '2': VarInt(bits=32)}, compareTo='mouse', default=Void())}]), 'keep_alive': Container(fields=[{'name': 'keepAliveId', 'type': Struct(fmt='>q')}]), 'position': Container(fields=[{'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'position_look': Container(fields=[{'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'look': Container(fields=[{'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}, {'name': 'onGround', 'type': Struct(fmt='?')}]), 'flying': Container(fields=[{'name': 'onGround', 'type': Struct(fmt='?')}]), 'vehicle_move': Container(fields=[{'name': 'x', 'type': Struct(fmt='>d')}, {'name': 'y', 'type': Struct(fmt='>d')}, {'name': 'z', 'type': Struct(fmt='>d')}, {'name': 'yaw', 'type': Struct(fmt='>f')}, {'name': 'pitch', 'type': Struct(fmt='>f')}]), 'steer_boat': Container(fields=[{'name': 'leftPaddle', 'type': Struct(fmt='?')}, {'name': 'rightPaddle', 'type': Struct(fmt='?')}]), 'craft_recipe_request': Container(fields=[{'name': 'windowId', 'type': Struct(fmt='b')}, {'name': 'recipe', 'type': String(countType=VarInt(bits=32))}, {'name': 'makeAll', 'type': Struct(fmt='?')}]), 'abilities': Container(fields=[{'name': 'flags', 'type': Struct(fmt='b')}, {'name': 'flyingSpeed', 'type': Struct(fmt='>f')}, {'name': 'walkingSpeed', 'type': Struct(fmt='>f')}]), 'block_dig': Container(fields=[{'name': 'status', 'type': Struct(fmt='b')}, {'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'face', 'type': Struct(fmt='b')}]), 'entity_action': Container(fields=[{'name': 'entityId', 'type': VarInt(bits=32)}, {'name': 'actionId', 'type': VarInt(bits=32)}, {'name': 'jumpBoost', 'type': VarInt(bits=32)}]), 'steer_vehicle': Container(fields=[{'name': 'sideways', 'type': Struct(fmt='>f')}, {'name': 'forward', 'type': Struct(fmt='>f')}, {'name': 'jump', 'type': Struct(fmt='B')}]), 'crafting_book_data': Container(fields=[{'name': 'type', 'type': VarInt(bits=32)}, {'anon': True, 'type': Switch(fields={'0': Container(fields=[{'name': 'displayedRecipe', 'type': String(countType=VarInt(bits=32))}]), '1': Container(fields=[{'name': 'craftingBookOpen', 'type': Struct(fmt='?')}, {'name': 'craftingFilter', 'type': Struct(fmt='?')}, {'name': 'smeltingBookOpen', 'type': Struct(fmt='?')}, {'name': 'smeltingFilter', 'type': Struct(fmt='?')}])}, compareTo='type', default=None)}]), 'resource_pack_receive': Container(fields=[{'name': 'result', 'type': VarInt(bits=32)}]), 'held_item_slot': Container(fields=[{'name': 'slotId', 'type': Struct(fmt='>h')}]), 'set_creative_slot': Container(fields=[{'name': 'slot', 'type': Struct(fmt='>h')}, {'name': 'item', 'type': Container(fields=[{'name': 'present', 'type': Struct(fmt='?')}, {'anon': True, 'type': Switch(fields={'false': Void(), 'true': Container(fields=[{'name': 'itemId', 'type': VarInt(bits=32)}, {'name': 'itemCount', 'type': Struct(fmt='b')}, {'name': 'nbtData', 'type': NBT()}])}, compareTo='present', default=None)}])}]), 'update_sign': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'text1', 'type': String(countType=VarInt(bits=32))}, {'name': 'text2', 'type': String(countType=VarInt(bits=32))}, {'name': 'text3', 'type': String(countType=VarInt(bits=32))}, {'name': 'text4', 'type': String(countType=VarInt(bits=32))}]), 'arm_animation': Container(fields=[{'name': 'hand', 'type': VarInt(bits=32)}]), 'spectate': Container(fields=[{'name': 'target', 'type': UUID()}]), 'block_place': Container(fields=[{'name': 'location', 'type': BitField(fields=[{'name': 'x', 'size': 26, 'signed': True}, {'name': 'y', 'size': 12, 'signed': True}, {'name': 'z', 'size': 26, 'signed': True}])}, {'name': 'direction', 'type': VarInt(bits=32)}, {'name': 'hand', 'type': VarInt(bits=32)}, {'name': 'cursorX', 'type': Struct(fmt='>f')}, {'name': 'cursorY', 'type': Struct(fmt='>f')}, {'name': 'cursorZ', 'type': Struct(fmt='>f')}]), 'use_item': Container(fields=[{'name': 'hand', 'type': VarInt(bits=32)}]), 'advancement_tab': Container(fields=[{'name': 'action', 'type': VarInt(bits=32)}, {'name': 'tabId', 'type': Switch(fields={'0': String(countType=VarInt(bits=32)), '1': Void()}, compareTo='action', default=None)}])}, compareTo='name', default=None)}])
